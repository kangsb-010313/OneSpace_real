<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teampage">

<!-- 쿼리문 작성 -->

	<!-- 팀 생성 (TEAMS 테이블) - <selectKey> 없는 순수 INSERT 구문 -->
    <insert id="insertTeam" parameterType="com.javaex.vo.TeamVO">
        insert into teams (
            teamName, 
            instaAccount, 
            teamCreatedDate,
            userNo        
        )
        values (
            #{teamName}, 
            #{instaAccount}, 
            now(),
            #{userNo}     
        )
    </insert>

    <!-- 특정 사용자가 가장 마지막에 만든 팀의 ID(teamNo)를 조회하는 쿼리 -->
    <select id="selectNewTeamNo" parameterType="int" resultType="int">
        select max(teamNo)
        from teams
        where userNo = #{userNo}
    </select>
    
    <!-- 팀원 등록 (TEAM_MEMBERS 테이블) - 이 쿼리는 그대로 유지 -->
    <insert id="insertTeamMember" parameterType="map">
        insert into teamMembers (
            teamNo, 
            userNo, 
            joinedDate
        )
        values (
            #{teamNo}, 
            #{userNo}, 
            now()
        )
    </insert>
    

    <!-- 유저 번호로 소속된 팀 목록 조회 (teammain aside용) -->
    <!-- team_members 테이블은 user와 team의 관계를 정의하는 테이블로 가정합니다. -->
	<select id="selectTeamsByUserNo" parameterType="int" resultType="com.javaex.vo.TeamVO">
	    <![CDATA[
	        select  t.teamNo,
	                t.teamName
	        from teams t, teamMembers tm 
	        where t.teamNo = tm.teamNo
	        and tm.userNo = #{userNo}
	        order by t.teamName asc
	    ]]>
	</select>


    <!-- 유저가 소속된 모든 팀의 게시글 조회 (teammain content용) -->
	<select id="selectPostsByUserTeams" parameterType="int" resultType="com.javaex.vo.TeamPostVO">
	    <![CDATA[
	        select  p.teamPostNo,
	                p.teamNo,
	                p.userNo,
	                p.teamPostType,
	                p.teamPostTitle,
	                date_format(p.teamWriteDate, '%Y-%m-%d') as teamWriteDate,
	                t.teamName
	        from posts p
	        join teams t on p.teamNo = t.teamNo
	        where p.teamNo in (select teamNo 
	                           from teamMembers   
	                           where userNo = #{userNo})
	        order by p.teamWriteDate desc, p.teamPostNo desc
	    ]]>
	</select>





	<!-- 팀페이지 리스트(팀선택시) -->
	<select id="selectListByTeamNo" parameterType="int" resultType="com.javaex.vo.TeamPostVO">
		<![CDATA[
			SELECT  p.teamPostNo,
                    p.teamNo,
                    p.userNo,
                    p.teamPostType,
                    p.teamPostTitle,
                    p.teamContent,
                    date_format(p.teamWriteDate, '%Y-%m-%d') as teamWriteDate,
                    date_format(p.teamUpdateDate, '%Y-%m-%d') as teamUpdateDate,
                    u.userName,   -- users 테이블에서 작성자 이름 가져오기
                    t.teamName    -- teams 테이블에서 팀 이름 가져오기
            from posts p
            join users u on p.userNo = u.userNo
            join teams t on p.teamNo = t.teamNo
            where p.teamNo = #{teamNo}
            order by p.teamWriteDate desc, p.teamPostNo desc
		]]>
	</select>
	
	
    <!-- 모든 팀 목록 조회 -->
    <select id="selectAllTeams" resultType="com.javaex.vo.TeamVO">
        <![CDATA[
            select teamNo, teamName
            from teams
            order by teamName asc
        ]]>
    </select>

    <!-- 특정 팀 정보 조회 (팀 이름 등을 가져올 때 사용) -->
    <select id="selectTeamInfoByNo" parameterType="int" resultType="com.javaex.vo.TeamVO">
        <![CDATA[
            select teamNo, teamName, instaAccount, teamCreatedDate
            from teams
            where teamNo = #{teamNo}
        ]]>
    </select>
    
    
    <!-- 게시글 상세 조회, 수정폼 -->
    <select id="selectPostByNo" parameterType="int" resultType="com.javaex.vo.TeamPostVO">
        <![CDATA[
            select  p.teamPostNo,
                    p.teamNo,
                    p.userNo,
                    p.teamPostType,
                    p.teamPostTitle,
                    p.teamContent,
                    date_format(p.teamWriteDate, '%Y-%m-%d') as teamWriteDate,
                    date_format(p.teamUpdateDate, '%Y-%m-%d') as teamUpdateDate,
                    u.userName,
                    t.teamName,
                    t.instaAccount
            from posts p
            join users u ON p.userNo = u.userNo
            join teams t ON p.teamNo = t.teamNo
            where p.teamPostNo = #{teamPostNo}
        ]]>
    </select>
    

	<!-- 팀페이지 글 등록 -->
	<insert id="insert" parameterType="com.javaex.vo.TeamPostVO">
		<![CDATA[
			insert into posts(teamPostNo, teamNo, teamPostType, teamPostTitle, teamContent, teamWriteDate, userNo)
			values(null, #{teamNo}, #{teamPostType}, #{teamPostTitle}, #{teamContent}, now(), #{userNo})
		]]>
	</insert>
	
	<!-- 게시글 수정 -->
    <update id="update" parameterType="com.javaex.vo.TeamPostVO">
        <![CDATA[
            update posts
            set teamPostType = #{teamPostType},
                teamPostTitle = #{teamPostTitle},
                teamContent = #{teamContent},
                teamUpdateDate = now()
            where teamPostNo = #{teamPostNo}
        ]]>
    </update>
	
	
    <!-- 게시글 삭제 -->
    <delete id="delete" parameterType="int">
        <![CDATA[
            delete from posts
            where teamPostNo = #{teamPostNo}
        ]]>
    </delete>
    
	<!-- 투표 만들기를 위해 사용자의 '찜 목록'에 있는 연습실 정보 가져오기 -->
	<select id="selectWishlistForVote" parameterType="int" resultType="com.javaex.vo.TeamVoteOptionVO">
	    <![CDATA[
	        SELECT
	            s.spacesNo,
	            s.spaceName,
	            s.address,
	            r.roomNo,
	            r.roomName,
	            r.area,
	            r.capacity
	        FROM
	            studioWishlist w  -- 찜 목록 테이블에서 시작
	        JOIN
	            rooms r ON w.roomNo = r.roomNo
	        JOIN
	            spaces s ON r.spacesNo = s.spacesNo
	        WHERE
	            w.userNo = #{userNo} -- 로그인한 사용자의 찜 목록만 조회
	        ORDER BY
	            w.studioWishlistNo DESC -- 가장 최근에 찜한 순서대로
	    ]]>
	</select>


    
    
    
    

</mapper>